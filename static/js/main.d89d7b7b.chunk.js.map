{"version":3,"sources":["App/component/header/index.js","App/component/main_filter/index.js","App/component/sub_filter/index.js","App/component/card/index.js","App/utils/index.js","App/assets/Images/empty.png","App/views/bodyContainer/index.js","App/assets/Images/usj-logo.png","App/assets/Images/cdepd-logo.png","App/views/footer/index.js","App/index.js","reportWebVitals.js","index.js"],"names":["Header","className","this","props","name","sinhaleappname","Component","Filter","renderChip","chipType","object","isAllLabel","selected","chipTypes","SELECTED","icon","func","onPressChipRemoveButton","onPressChipSelectButton","labelStyles","sameCategory","state","selectedWord","category","color","Chip","label","clickable","onDelete","onClick","disabled","classes","deleteIcon","renderSelectedChip","window","scrollTo","setState","expandMainCategory","onSetNewCategory","obj","onClickIconButton","searchEnabled","onSearchStatusChange","onClickSearch","accordionSummaryShifter","AccordionSummary","root","expandIcon","IconButton","disableRipple","disableFocusRipple","TextField","id","variant","onChange","onChangeText","Typography","pageConstants","filterTitle","Accordion","expanded","defaultExpanded","AccordionDetails","Array","dictionary","length","fill","map","_","i","NONSELECTED","SubFilter","selectedSubCategory","value","expandSubCategory","onSetNewSubCategory","sub_categories","selectedMainCategory","subFilterTitle","CardClass","Card","title","subTitle","Button","startIcon","open_link","isObjEmpty","BodyContainer","getWords","cat","subCat","getAllWords","getAllCategotyWords","getSubCategotyWords","subID","words","sub_category_id","push","allWords","list","prevProps","searchText","filter","english_meaning","toLowerCase","replace","includes","forceUpdate","isSearchEnable","subCategory","sinhala_word","link","pageConsts","empty_search","empty","src","EmptyImage","alt","Footer","year","Date","getFullYear","uniLogo","cdepdLogo","footer","copyright","all_rights","powered","href","cdepd_link","cdepd","Home","selectedCategory","onChangeTextOnSearch","event","timeout","clearTimeout","setTimeout","target","status","subFilter","PageConstants","appname","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","theme","createMuiTheme","palette","primary","main","light","dark","ReactDOM","render","StrictMode","ThemeProvider","document","getElementById"],"mappings":"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","file":"static/js/main.d89d7b7b.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport \"./index.css\";\n\nexport default class Header extends Component {\n  render() {\n    return (\n      <div className=\"header-bar\">\n        <h1 className=\"header-name\">{this.props.name}</h1>\n        <h1 className=\"header-sinhala-name\">{this.props.sinhaleappname}</h1>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport \"./index.css\";\n\nimport Chip from \"@material-ui/core/Chip\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Accordion from \"@material-ui/core/Accordion\";\nimport AccordionSummary from \"@material-ui/core/AccordionSummary\";\nimport AccordionDetails from \"@material-ui/core/AccordionDetails\";\nimport Typography from \"@material-ui/core/Typography\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport CloseOutlinedIcon from \"@material-ui/icons/CloseOutlined\";\nimport SearchOutlinedIcon from \"@material-ui/icons/SearchOutlined\";\nimport Check from \"@material-ui/icons/CheckCircleRounded\";\nimport TextField from \"@material-ui/core/TextField\";\n\nimport pageConstants from \"../../consts/pageConstants.json\";\nimport dictionary from \"../../consts/MainDictionary.json\";\n\nexport default class Filter extends Component {\n  constructor() {\n    super();\n    this.state = {\n      selectedWord: null,\n      expandMainCategory: true,\n      searchEnabled: false,\n    };\n  }\n\n  renderChip = (chipType, object, isAllLabel = false) => {\n    const selected = chipType === chipTypes.SELECTED;\n    const icon = selected ? null : <Check />;\n    const func = selected\n      ? this.onPressChipRemoveButton\n      : this.onPressChipSelectButton;\n    const labelStyles = isAllLabel\n      ? \"selectable-chip-text-roboto\"\n      : \"selectable-chip-text\";\n    const sameCategory = this.state.selectedWord?.category === object.category;\n    const color =\n      (selected || sameCategory) && !isAllLabel ? \"primary\" : \"default\";\n    return (\n      <Chip\n        key={object.category}\n        label={object.category}\n        clickable={true}\n        onDelete={() => func(object)}\n        onClick={() => func(object)}\n        color={color}\n        disabled={isAllLabel || (!selected && sameCategory)}\n        classes={{\n          clickable: \"selectable-chip\",\n          label: labelStyles,\n        }}\n        deleteIcon={icon}\n      />\n    );\n  };\n\n  renderSelectedChip = () => {\n    const AllObject = {\n      category: \"All\",\n    };\n    return this.state.selectedWord === null\n      ? this.renderChip(chipTypes.SELECTED, AllObject, true)\n      : this.renderChip(chipTypes.SELECTED, this.state.selectedWord);\n  };\n\n  onPressChipRemoveButton = () => {\n    window.scrollTo(0, 0);\n    this.setState({ selectedWord: null, expandMainCategory: true });\n    this.props.onSetNewCategory(null);\n  };\n\n  onPressChipSelectButton = (obj) => {\n    window.scrollTo(0, 0);\n    this.setState({ selectedWord: obj });\n    this.onClickIconButton();\n    this.props.onSetNewCategory(obj);\n  };\n\n  onClickIconButton = () => {\n    if (!this.state.searchEnabled)\n      this.setState({ expandMainCategory: !this.state.expandMainCategory });\n    else {\n      this.setState({ searchEnabled: false, expandMainCategory: true });\n      this.onPressChipRemoveButton();\n      this.props.onSearchStatusChange(false);\n    }\n  };\n\n  onClickSearch = () => {\n    this.props.onSearchStatusChange(true);\n    this.setState({ expandMainCategory: false, searchEnabled: true });\n  };\n\n  accordionSummaryShifter = () => {\n    const { searchEnabled } = this.state;\n    if (!searchEnabled) {\n      return (\n        <AccordionSummary\n          classes={{ root: \"accordian-summary\" }}\n          expandIcon={\n            <IconButton\n              onClick={this.onClickIconButton}\n              disableRipple={true}\n              disableFocusRipple\n            >\n              <ExpandMoreIcon />\n            </IconButton>\n          }\n        >\n          <Typography className=\"accordian-title\">\n            {pageConstants.filterTitle}\n          </Typography>\n          {this.renderSelectedChip()}\n          <div className=\"search-button\">\n            <IconButton\n              onClick={this.onClickSearch}\n              disableRipple={true}\n              disableFocusRipple\n            >\n              {searchEnabled ? null : <SearchOutlinedIcon />}\n            </IconButton>\n          </div>\n        </AccordionSummary>\n      );\n    }\n    return (\n      <AccordionSummary\n        classes={{ root: \"accordian-summary\" }}\n        expandIcon={\n          <IconButton\n            onClick={this.onClickIconButton}\n            disableRipple={true}\n            disableFocusRipple\n          >\n            <CloseOutlinedIcon />\n          </IconButton>\n        }\n      >\n        <TextField\n          id=\"outlined-basic\"\n          label=\"Search by English Word\"\n          variant=\"outlined\"\n          onChange={this.props.onChangeText}\n          classes={{ root: \"search-input\" }}\n        />\n      </AccordionSummary>\n    );\n  };\n\n  render() {\n    return (\n      <Accordion\n        expanded={this.state.expandMainCategory}\n        defaultExpanded={true}\n        classes={{ root: \"accordian-root\" }}\n      >\n        {this.accordionSummaryShifter()}\n        <AccordionDetails classes={{ root: \"accordian-details\" }}>\n          {Array(dictionary.length)\n            .fill()\n            .map((_, i) => i)\n            .map((i) => {\n              return this.renderChip(chipTypes.NONSELECTED, dictionary[i]);\n            })}\n        </AccordionDetails>\n      </Accordion>\n    );\n  }\n}\n\nconst chipTypes = {\n  SELECTED: \"selected\",\n  NONSELECTED: \"non-selected\",\n};\n","import React, { Component } from \"react\";\nimport \"./index.css\";\n\nimport Chip from \"@material-ui/core/Chip\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Accordion from \"@material-ui/core/Accordion\";\nimport AccordionSummary from \"@material-ui/core/AccordionSummary\";\nimport AccordionDetails from \"@material-ui/core/AccordionDetails\";\nimport Typography from \"@material-ui/core/Typography\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport Check from \"@material-ui/icons/CheckCircleRounded\";\n\nimport pageConstants from \"../../consts/pageConstants.json\";\n\nexport default class SubFilter extends Component {\n  constructor() {\n    super();\n    this.state = {\n      selectedSubCategory: null,\n      expandSubCategory: true,\n    };\n  }\n\n  renderChip = (chipType, object, isAllLabel = false) => {\n    const selected = chipType === chipTypes.SELECTED;\n    const icon = selected ? null : <Check />;\n    const func = selected\n      ? this.onPressChipRemoveButton\n      : this.onPressChipSelectButton;\n    const labelStyles = isAllLabel\n      ? \"selectable-chip-text-roboto\"\n      : \"selectable-chip-text\";\n    const sameCategory = this.state.selectedSubCategory?.value === object.value;\n    const color =\n      (selected || sameCategory) && !isAllLabel ? \"primary\" : \"default\";\n    return (\n      <Chip\n        key={object.value}\n        label={object.value}\n        clickable={true}\n        onDelete={() => func(object)}\n        onClick={() => func(object)}\n        color={color}\n        disabled={isAllLabel || (!selected && sameCategory)}\n        classes={{\n          clickable: \"selectable-chip\",\n          label: labelStyles,\n        }}\n        deleteIcon={icon}\n      />\n    );\n  };\n\n  renderSelectedChip = () => {\n    const AllObject = {\n      value: \"All\",\n    };\n    return this.state.selectedSubCategory === null\n      ? this.renderChip(chipTypes.SELECTED, AllObject, true)\n      : this.renderChip(chipTypes.SELECTED, this.state.selectedSubCategory);\n  };\n\n  onPressChipRemoveButton = () => {\n    window.scrollTo(0, 0);\n    this.setState({ selectedSubCategory: null, expandSubCategory: true });\n    this.props.onSetNewSubCategory(null);\n  };\n\n  onPressChipSelectButton = (obj) => {\n    window.scrollTo(0, 0);\n    this.setState({ selectedSubCategory: obj });\n    this.onClickIconButton();\n    this.props.onSetNewSubCategory(obj);\n  };\n\n  onClickIconButton = () => {\n    this.setState({ expandSubCategory: !this.state.expandSubCategory });\n  };\n\n  render() {\n    const { sub_categories } = this.props.selectedMainCategory;\n    return (\n      <Accordion\n        expanded={this.state.expandSubCategory}\n        defaultExpanded={true}\n        classes={{ root: \"accordian-root\" }}\n      >\n        <AccordionSummary\n          classes={{ root: \"accordian-summary\" }}\n          expandIcon={\n            <IconButton\n              onClick={this.onClickIconButton}\n              disableRipple={true}\n              disableFocusRipple\n            >\n              <ExpandMoreIcon />\n            </IconButton>\n          }\n        >\n          <Typography className=\"accordian-title\">\n            {pageConstants.subFilterTitle}\n          </Typography>\n          {this.renderSelectedChip()}\n        </AccordionSummary>\n        <AccordionDetails classes={{ root: \"accordian-details\" }}>\n          {Array(sub_categories.length)\n            .fill()\n            .map((_, i) => i)\n            .map((i) => {\n              return this.renderChip(chipTypes.NONSELECTED, sub_categories[i]);\n            })}\n        </AccordionDetails>\n      </Accordion>\n    );\n  }\n}\n\nconst chipTypes = {\n  SELECTED: \"selected\",\n  NONSELECTED: \"non-selected\",\n};\n","import React, { Component } from \"react\";\nimport Card from \"@material-ui/core/Card\";\nimport Button from \"@material-ui/core/Button\";\nimport OpenInNew from \"@material-ui/icons/OpenInNew\";\n\nimport \"./index.css\";\nimport pageConstants from \"../../consts/pageConstants.json\";\n\nexport default class CardClass extends Component {\n  render() {\n    return (\n      <Card classes={{ root: \"single-card\" }}>\n        <span className=\"card-title\">{this.props.title}</span>\n        <span className=\"card-subtitle\">{this.props.subTitle}</span>\n        <div className=\"sample\">\n          <Button\n            classes={{ root: \"card-button\" }}\n            color=\"primary\"\n            startIcon={<OpenInNew />}\n              variant=\"outlined\"\n          >\n            {pageConstants.open_link}\n          </Button>\n        </div>\n      </Card>\n    );\n  }\n}\n","import * as _ from \"lodash\";\n\nexport const isObjEmpty = (obj) => {\n  return _.isEmpty(obj);\n};\n","export default __webpack_public_path__ + \"static/media/empty.ea0bdea9.png\";","import React, { Component } from \"react\";\nimport Card from \"../../component/card\";\nimport \"./index.css\";\nimport dictionary from \"../../consts/dictionary.json\";\nimport pageConsts from \"../../consts/pageConstants.json\";\nimport { isObjEmpty } from \"../../utils\";\nimport EmptyImage from \"../../assets/Images/empty.png\";\n\nexport default class BodyContainer extends Component {\n  constructor() {\n    super();\n    this.state = {\n      allWords: [],\n    };\n    this.list = [];\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.searchText !== this.props.searchText) {\n      this.list = this.state.allWords.filter((obj) => {\n        return obj.english_meaning\n          .toLowerCase()\n          .replace(/-/g, \" \")\n          .includes(this.props.searchText.toLowerCase());\n      });\n      this.forceUpdate();\n    }\n    if (\n      prevProps.isSearchEnable !== this.props.isSearchEnable &&\n      this.props.isSearchEnable\n    ) {\n      this.list = this.getWords({}, {});\n      this.forceUpdate();\n    }\n    if (\n      prevProps.isSearchEnable !== this.props.isSearchEnable &&\n      !this.props.isSearchEnable\n    ) {\n      this.list = [];\n    }\n  }\n\n  getWords = (cat, subCat) => {\n    if (isObjEmpty(cat)) return this.getAllWords();\n    else if (!isObjEmpty(cat) && isObjEmpty(subCat))\n      return this.getAllCategotyWords(cat);\n    else if (!isObjEmpty(cat) && !isObjEmpty(subCat))\n      return this.getSubCategotyWords(cat, subCat.id);\n  };\n\n  getSubCategotyWords = (cat, subID) => {\n    const words = [];\n    for (let i = 0; i < cat.words.length; i++) {\n      if (cat.words[i].sub_category_id === subID) words.push(cat.words[i]);\n    }\n    return words;\n  };\n\n  getAllCategotyWords = (cat) => {\n    const words = [];\n    for (let i = 0; i < cat.words.length; i++) {\n      words.push(cat.words[i]);\n    }\n    return words;\n  };\n\n  getAllWords = () => {\n    if (this.state.allWords.length === 0) {\n      const words = [];\n      for (let i = 0; i < dictionary.length; i++) {\n        words.push(...dictionary[i].words);\n      }\n      this.setState({ allWords: words });\n      return words;\n    }\n    return this.state.allWords;\n  };\n\n  render() {\n    const { category, subCategory, isSearchEnable } = this.props;\n    const list = isSearchEnable\n      ? this.list\n      : this.getWords(category, subCategory);\n    return (\n      <div className=\"body-cont\">\n        {list.length > 0 ? (\n          Array(list.length)\n            .fill()\n            .map((_, i) => i)\n            .map((i) => (\n              <Card\n                key={list[i].id + list[i].sinhala_word}\n                title={list[i].sinhala_word}\n                subTitle={list[i].english_meaning}\n                link=\"\"\n              />\n            ))\n        ) : (\n          <div className=\"empty_div\">\n            <h3 className=\"empty_text\">\n              {isSearchEnable ? pageConsts.empty_search : pageConsts.empty}\n            </h3>\n            <img\n              className=\"empty-image\"\n              src={EmptyImage}\n              alt=\"Empty Illustration\"\n            />\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n","export default __webpack_public_path__ + \"static/media/usj-logo.062e1bd0.png\";","export default __webpack_public_path__ + \"static/media/cdepd-logo.79bbb44e.png\";","import React, { Component } from \"react\";\nimport \"./index.css\";\nimport pageConsts from \"../../consts/pageConstants.json\";\nimport uniLogo from \"../../assets/Images/usj-logo.png\";\nimport cdepdLogo from \"../../assets/Images/cdepd-logo.png\";\n\nexport default class Footer extends Component {\n  render() {\n    const year = new Date().getFullYear();\n    return (\n      <div className=\"footer-container\">\n        <div className=\"img-container\">\n          <img className=\"uni-logo\" alt=\"University Logo\" src={uniLogo} />\n          <img className=\"cdepd-logo\" alt=\"CDEPD Logo\" src={cdepdLogo} />\n        </div>\n        <span className=\"copyright-text\">{`${pageConsts.footer.copyright.replace(\n          \"{year}\",\n          year\n        )} ${pageConsts.footer.all_rights}`}</span>\n        <span className=\"poweredby-text\">\n          {pageConsts.footer.powered}\n          <a className=\"link-color\" href={pageConsts.footer.cdepd_link}>{pageConsts.footer.cdepd}</a>\n        </span>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport \"./index.css\";\nimport Header from \"./component/header\";\nimport MainFilter from \"./component/main_filter\";\nimport SubFilter from \"./component/sub_filter\";\nimport BodyContainer from \"./views/bodyContainer\";\nimport PageConstants from \"./consts/pageConstants.json\";\nimport Footer from \"./views/footer\";\n\nexport default class Home extends Component {\n  constructor() {\n    super();\n    this.state = {\n      selectedCategory: {},\n      selectedSubCategory: {},\n      isSearchEnable: false,\n      searchText: \"\",\n    };\n    this.timeout = null;\n  }\n\n  onSetNewCategory = (object) => {\n    // Object can be null too.\n    this.setState({ selectedCategory: object ? object : {} });\n  };\n\n  onSetNewSubCategory = (object) => {\n    // Object can be null too.\n    this.setState({ selectedSubCategory: object ? object : {} });\n  };\n\n  onChangeTextOnSearch = (event) => {\n    if (this.state.isSearchEnable) {\n      if (this.timeout) clearTimeout(this.timeout);\n      this.timeout = setTimeout(() => {\n        this.setState({ searchText: event.target.value });\n      }, 1500);\n    }\n  };\n\n  onSearchStatusChange = (status) => {\n    // This gets fired if the Search is enabled of disabled.\n    // Either way it changes searcText to empty.\n    this.setState({ isSearchEnable: status, searchText: \"\" });\n  };\n\n  render() {\n    const {\n      selectedCategory,\n      selectedSubCategory,\n      searchText,\n      isSearchEnable,\n    } = this.state;\n    const subFilter =\n      this.state.selectedCategory?.sub_categories?.length > 0 ? (\n        <SubFilter\n          selectedMainCategory={selectedCategory}\n          onSetNewSubCategory={this.onSetNewSubCategory}\n        />\n      ) : null;\n    return (\n      <div className=\"container\">\n        <Header\n          name={PageConstants.appname}\n          sinhaleappname={PageConstants.sinhaleappname}\n        />\n        <div className=\"content\">\n          <MainFilter\n            onChangeText={this.onChangeTextOnSearch}\n            onSetNewCategory={this.onSetNewCategory}\n            onSearchStatusChange={this.onSearchStatusChange}\n          />\n          {subFilter}\n          <BodyContainer\n            category={selectedCategory}\n            subCategory={selectedSubCategory}\n            searchText={searchText}\n            isSearchEnable={isSearchEnable}\n          />\n        </div>\n        <Footer />\n      </div>\n    );\n  }\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { createMuiTheme, ThemeProvider } from \"@material-ui/core/styles\";\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: \"#A93E3C\",\n      light: \"#A93E3C\",\n      dark: \"#A93E3C\",\n    },\n  },\n});\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n      <App />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}