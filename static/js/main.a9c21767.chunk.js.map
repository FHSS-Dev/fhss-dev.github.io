{"version":3,"sources":["App/component/header/index.js","App/component/filter/index.js","App/component/card/index.js","App/views/bodyContainer/index.js","App/index.js","reportWebVitals.js","index.js"],"names":["Header","className","this","props","name","Component","Filter","renderChip","chipType","object","isAllLabel","selected","chipTypes","SELECTED","icon","func","onPressChipRemoveButton","onPressChipSelectButton","labelStyles","Chip","label","category","clickable","onDelete","onClick","disabled","classes","deleteIcon","renderSelectedChip","state","selectedWord","setState","onSetNewCategory","obj","Accordion","root","AccordionSummary","expandIcon","Typography","pageConstants","filterTitle","AccordionDetails","Array","dictionary","length","fill","map","_","i","NONSELECTED","CardClass","Card","title","subTitle","Button","color","startIcon","variant","open_link","BodyContainer","getAllWords","words","push","newCategory","console","log","list","id","sinhala_word","english_meaning","link","Home","selectedCategory","PageConstants","appname","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a9c21767.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport \"./index.css\";\n\nexport default class Header extends Component {\n  render() {\n    return (\n      <div className=\"header-bar\">\n        <h1 className=\"header-name\">{this.props.name}</h1>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport \"./index.css\";\n\nimport Chip from \"@material-ui/core/Chip\";\nimport Accordion from \"@material-ui/core/Accordion\";\nimport AccordionSummary from \"@material-ui/core/AccordionSummary\";\nimport AccordionDetails from \"@material-ui/core/AccordionDetails\";\nimport Typography from \"@material-ui/core/Typography\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport Check from \"@material-ui/icons/CheckCircleRounded\";\n\nimport pageConstants from \"../../consts/pageConstants.json\";\nimport dictionary from \"../../consts/dictionary.json\";\n\nexport default class Filter extends Component {\n  constructor() {\n    super();\n    this.state = {\n      selectedWord: null,\n    };\n  }\n\n  renderChip = (chipType, object, isAllLabel = false) => {\n    const selected = chipType === chipTypes.SELECTED;\n    const icon = selected ? null : <Check />;\n    const func = selected\n      ? this.onPressChipRemoveButton\n      : this.onPressChipSelectButton;\n    const labelStyles = isAllLabel\n      ? \"selectable-chip-text-roboto\"\n      : \"selectable-chip-text\";\n    return (\n      <Chip\n        label={object.category}\n        clickable={true}\n        onDelete={() => func(object)}\n        onClick={() => func(object)}\n        disabled={isAllLabel}\n        classes={{\n          clickable: \"selectable-chip\",\n          label: labelStyles,\n        }}\n        deleteIcon={icon}\n      />\n    );\n  };\n\n  renderSelectedChip = () => {\n    const AllObject = {\n      category: \"All\",\n    };\n    return this.state.selectedWord === null\n      ? this.renderChip(chipTypes.SELECTED, AllObject, true)\n      : this.renderChip(chipTypes.SELECTED, this.state.selectedWord);\n  };\n\n  onPressChipRemoveButton = () => {\n    this.setState({ selectedWord: null });\n    this.props.onSetNewCategory(null);\n  };\n\n  onPressChipSelectButton = (obj) => {\n    this.setState({ selectedWord: obj });\n    this.props.onSetNewCategory(obj);\n  };\n\n  render() {\n    return (\n      <Accordion classes={{ root: \"accordian-root\" }}>\n        <AccordionSummary\n          classes={{ root: \"accordian-summary\" }}\n          expandIcon={<ExpandMoreIcon />}\n        >\n          <Typography className=\"accordian-title\">\n            {pageConstants.filterTitle}\n          </Typography>\n          {this.renderSelectedChip()}\n        </AccordionSummary>\n        <AccordionDetails classes={{ root: \"accordian-details\" }}>\n          {Array(dictionary.length)\n            .fill()\n            .map((_, i) => i)\n            .map((i) => {\n              return this.renderChip(chipTypes.NONSELECTED, dictionary[i]);\n            })}\n        </AccordionDetails>\n      </Accordion>\n    );\n  }\n}\n\nconst chipTypes = {\n  SELECTED: \"selected\",\n  NONSELECTED: \"non-selected\",\n};\n","import React, { Component } from \"react\";\nimport Card from \"@material-ui/core/Card\";\nimport Button from \"@material-ui/core/Button\";\nimport OpenInNew from \"@material-ui/icons/OpenInNew\";\n\nimport \"./index.css\";\nimport pageConstants from \"../../consts/pageConstants.json\";\n\nexport default class CardClass extends Component {\n  render() {\n    return (\n      <Card classes={{ root: \"single-card\" }}>\n        <span className=\"card-title\">{this.props.title}</span>\n        <span className=\"card-subtitle\">{`English Meaning : ${this.props.subTitle}`}</span>\n        <div className=\"sample\">\n          <Button\n            classes={{ root: \"card-button\" }}\n            color=\"primary\"\n            startIcon={<OpenInNew />}\n              variant=\"outlined\"\n          >\n            {pageConstants.open_link}\n          </Button>\n        </div>\n      </Card>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport Card from \"../../component/card\";\nimport \"./index.css\";\nimport dictionary from \"../../consts/dictionary.json\";\n\nexport default class BodyContainer extends Component {\n  getAllWords = () => {\n    const words = [];\n    for (let i = 0; i < dictionary.length; i++) {\n      words.push(...dictionary[i].words);\n    }\n    return words;\n  };\n  render() {\n    const { words } = this.props.newCategory;\n    console.log(words);\n    const list = words ? words : this.getAllWords();\n    return (\n      <div className=\"body-cont\">\n        {Array(list.length)\n          .fill()\n          .map((_, i) => i)\n          .map((i) => (\n            <Card\n              id={list[i].id}\n              title={list[i].sinhala_word}\n              subTitle={list[i].english_meaning}\n              link=\"\"\n            />\n          ))}\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport \"./index.css\";\nimport Header from \"./component/header\";\nimport Filter from \"./component/filter\";\nimport BodyContainer from \"./views/bodyContainer\";\nimport PageConstants from \"./consts/pageConstants.json\";\n\nexport default class Home extends Component {\n  constructor() {\n    super();\n    this.state = {\n      selectedCategory: {},\n    };\n  }\n\n  onSetNewCategory = (object) => {\n    // Object can be null too.\n    this.setState({ selectedCategory: object ? object : {} });\n  };\n\n  render() {\n    return (\n      <div className=\"container\">\n        <Header name={PageConstants.appname} />\n        <div className=\"content\">\n          <Filter onSetNewCategory={this.onSetNewCategory} />\n          <BodyContainer newCategory={this.state.selectedCategory} />\n        </div>\n      </div>\n    );\n  }\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}